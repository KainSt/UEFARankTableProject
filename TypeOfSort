import java.util.Comparator;
import java.util.Arrays;

public class HelloWorld{
    
    public static class UEFARank.ScoreComparator implements Comparator<Table> {
    @Override
    public int compare(Table o1, Table o2) {
       if (o2.score - o1.score == 0) {
           System.out.println("equality of point!! " + o1.teamName + " - " + o2.teamName);
           System.out.println();

           return ((o2.goal - o1.goal));///нужно вызывать функцию, которая будет возвращать результат
           // -1/0/+1 внутренними расчетами, в зависимости от итогов игры
       }
        return o2.score - o1.score;
       }
}
    
    
    public static class Table{
        int score, goal;
        String teamName;
        
    
       
   Table (String name, int score, int goal){
          this.score = score;
          this.goal = goal;
       teamName = name;
        }
     
   }

     public static void main(String []args){
         
        Table [] list = new Table[6];
        list[0]=new Table("Milan A", 1, 2);
        list[1]=new Table("Milan B", 1, 1);
        list[2]=new Table("Milan C", 2, 4);
        list[3]=new Table("Milan D", 3, 6);
        list[4]=new Table("Milan E", 1, 7);
        list[5]=new Table("Milan F", 3, 9);
        
        
        System.out.println(list[0].teamName + " " + list[0].score + " " + list[0].goal);
        System.out.println(list[1].teamName + " " + list[1].score + " " + list[1].goal);
        System.out.println(list[2].teamName + " " + list[2].score + " " + list[2].goal);
        System.out.println(list[3].teamName + " " + list[3].score + " " + list[3].goal);
        System.out.println(list[4].teamName + " " + list[4].score + " " + list[4].goal);
        System.out.println(list[5].teamName + " " + list[5].score + " " + list[5].goal);
        System.out.println();
        
        Arrays.sort(list, new UEFARank.ScoreComparator());
        
        System.out.println(list[0].teamName + " " + list[0].score + " " + list[0].goal);
        System.out.println(list[1].teamName + " " + list[1].score + " " + list[1].goal);
        System.out.println(list[2].teamName + " " + list[2].score + " " + list[2].goal);
        System.out.println(list[3].teamName + " " + list[3].score + " " + list[3].goal);
        System.out.println(list[4].teamName + " " + list[4].score + " " + list[4].goal);
        System.out.println(list[5].teamName + " " + list[5].score + " " + list[5].goal);
        System.out.println();
        
        int [] countTable = new int[6];
        
       
        for (int i = 0; i < 6; i++){
            for (int k = 0; k<6;k++){
            if (list[i].score == list[k].score ) {
                countTable[i]++;
            }
            }
        }
        
        for (int i = 0; i<6;i++){
          System.out.println(countTable[i]);  
        }
        System.out.println();
        
        for (int i = 0; i< countTable.length; i++) {
            if (countTable[i] > 1){
                int delta = i;
                String [] localTable = new String[countTable[i]];
               for (int l=0; l<countTable[delta];l++) {
                    localTable[l] = list[l+delta].teamName;
                    }
                
                for (int x =0; x < localTable.length;x++)   {
                    System.out.println(localTable[x]);
                }
               
                if (i+countTable[delta]>countTable.length){
                    break;
                } else{
                    i = i+countTable[delta]-1;
                };
               
                }
   
        }

        
     } 
   
     
}  
